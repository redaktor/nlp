import _ = require("../../../nlp/_");

declare var zip:any;
zip = [ [ 'wrong', '=' ],
  [ 'public', '=@' ],
  [ 'vague', '=@', 1 ],
  [ 'icy', 'ici@' ],
  [ 's_le', 's_@' ],
  [ 'fem%e', 'woman@' ],
  [ 'm%e', 'man@' ],
  [ 'simple', 'simp@', 1 ],
  [ 'whole', 'whol@' ],
  [ 'speci%', 'e=@' ],
  [ 'stra&', '=', 1 ],
  [ 'gay', '=' ],
  [ 'fast', '=', 1 ],
  [ 'hard', '=', 1, '=est' ],
  [ 'late', '=', 1, '=st' ],
  [ 'ear@', '=', 1 ],
  [ 'best', '=' ],
  [ 'latt~', '=' ],
  [ 'bad', '=@', 'worse', 'worst' ],
  [ 'idle', 'id@' ],
  [ 'black', 0, 1 ],
  [ 'white', 0, 1 ],
  [ 'g!en', 0, '=~', 1 ],
  [ '!d', 0, '=d~', 1 ],
  [ 'blue', 0, 1 ],
  [ 'yellow', 0, '=~', 1 ],
  [ 'cyan', 0 ],
  [ 'mag#a', 0 ],
  [ 'brown', 0, 1 ],
  [ 'orange', 0, 1 ],
  [ 'gold', 0 ],
  [ 'g!y', 0, '=~', 0 ],
  [ 'gray', 0, '=~', 0 ],
  [ 'fo!ign', 0 ],
  [ 'mod~n', 0 ],
  [ 'next', 0 ],
  [ 'difficult', 0 ],
  [ 'degen~ate', 0 ],
  [ 'young', 0, 1 ],
  [ 'awake', 0 ],
  [ 'back', 0 ],
  [ 'complex', 0 ],
  [ 'cool', 0, 1 ],
  [ 'dirty', 0, 1 ],
  [ 'done', 0 ],
  [ 'empty', 0, 1 ],
  [ 'fat', 0, 1 ],
  [ 'f~tile', 0 ],
  [ 'frozen', 0 ],
  [ 'm;ium', 0 ],
  [ 'par%lel', 0 ],
  [ 'outdoor', 0 ],
  [ 'unknown', 0 ],
  [ 'und~siz;', 0 ],
  [ 'us;', 0 ],
  [ 'welcome', 0 ],
  [ 'fix;', 0 ],
  [ 'mix;', 0 ],
  [ 'sup~', 0 ],
  [ 'sup~b', 0 ],
  [ 'guilty', 0 ],
  [ 'tiny', 0 ],
  [ 'able', 0 ],
  [ 'unable', 0 ],
  [ 'same', 0 ],
  [ 'adult', 0 ],
  [ 'good', 'well', 'bett~', 'best' ],
  [ 'sad', 1, '=d~', 1 ],
  [ 'ov~we&', 1 ],
  [ 'main', 1 ],
  [ 'nearby', 1 ],
  [ 'asleep', 1 ],
  [ 'week@', 1 ],
  [ 'sec!t', 1, 'mo! =', 'top =' ],
  [ 'c~tain', 1 ],
  [ '!ady', 1, '!adi~', '!adiest' ],
  [ 'nice', 1, 1, '=st' ],
  [ 'inn~', 1, 0, '=most' ],
  [ 'out~', 1, 0, '=most' ],
  [ 'far', 1, 'furth~', 'furthest' ],
  [ 'clean', 1, 1, 1, '=liness' ],
  [ 'naive', 1, 0, 0, '=ty' ],
  'vague',
  'simple',
  'stra&',
  'fast',
  'hard',
  'late',
  'ear@',
  'black',
  'white',
  'g!en',
  '!d',
  'blue',
  'yellow',
  'brown',
  'orange',
  'young',
  'cool',
  'dirty',
  'empty',
  'fat',
  'sad',
  'nice',
  'clean',
  'full',
  'absurd',
  '%~t',
  '%ive',
  'big',
  'bitt~',
  'brash',
  'brave',
  'brief',
  'br&',
  'broad',
  'c%m',
  'charm_',
  'cheap',
  'close',
  'cold',
  'cruel',
  'cur@',
  'cute',
  'damp',
  'dark',
  'dead',
  'dear',
  'deep',
  'drunk',
  'dry',
  'dull',
  'eag~',
  'easy',
  'even',
  'ext!me',
  'faint',
  'fair',
  'fanc',
  'feeble',
  'few',
  'fi~ce',
  'fine',
  'firm',
  'flat',
  'forgetful',
  'frail',
  'f!e',
  'f!sh',
  'funny',
  'g#le',
  'glad',
  'glib',
  'grand',
  'g!at',
  'harsh',
  'heavy',
  'high',
  'hollow',
  'hot',
  'impolite',
  'important',
  'keen',
  'kind',
  'lame',
  'large',
  'loose',
  'loud',
  'low',
  'lush',
  'macho',
  'mad',
  'matu!',
  'meek',
  'mellow',
  'mundane',
  'narrow',
  'near',
  'neat',
  'new',
  'noisy',
  'odd',
  'old',
  'p%e',
  'pink',
  'plain',
  'poor',
  'pu!',
  'purple',
  'quick',
  'quiet',
  'ra!',
  'raw',
  'rich',
  'round',
  'rude',
  'safe',
  'scarce',
  'sh%low',
  'sharp',
  'short',
  'shrill',
  'slim',
  'slow',
  'sm%l',
  'smooth',
  'soft',
  'soon',
  'so!',
  'sour',
  'squa!',
  'st%e',
  'steep',
  'stiff',
  'strange',
  'strict',
  'strong',
  'sweet',
  'swift',
  't%l',
  'tame',
  'tart',
  'tend~',
  'tense',
  'thick',
  'thin',
  't&',
  'tough',
  'true',
  'vast',
  'vulgar',
  'warm',
  'weak',
  'weird',
  'wet',
  'wild',
  'windy',
  'wise',
  'agg!ssive',
  'awe0',
  'beautiful',
  'bo!d',
  'bor_',
  'effici#',
  'grue0',
  'hand0',
  'innoc#',
  'lean',
  'little',
  'long',
  'norm%',
  'proud',
  'rapid',
  'sca!d',
  'smart',
  'thirsty',
  'hungry',
  'clear',
  'happy',
  'lucky',
  'p!tty',
  'int~est_',
  'attractive',
  'dang~ous',
  'intellig#',
  'intelleg#',
  'form%',
  'ti!d',
  'solid',
  'angry' ]

export = (function () {
    var repJJ = function(s) { return (typeof s !== 'string') ? s : _.repl(s, ['ight', 'ing', 'ent', 'er', 're', 'al', 'ed', 'ly', 'some']); }
    var res = { convertables: [], adverb: {to: {}, no:[]}, comparative: {to: {}}, superlative: {to: {}}, noun: {to: {}} };
    var expand = function (s, b) { return (s === 0) ? 0 : s.replace('=', b); }
    zip.forEach(function(_a:any) {
      if (typeof _a === 'string') {
        res.convertables.push(repJJ(_a));
      } else {
        var a = _a.map(repJJ);
        if (a.length > 1) {
          if (a[1] === 0) { res.adverb.no.push(a[0]); }
          if (typeof a[1] === 'string') { res.adverb.to[a[0]] = expand(a[1], a[0]); }
        }
        if (a[2] && a[2] === 1) {
          res.convertables.push(a[0])
        } else if (a.length>2) {
          res.comparative.to[a[0]] = expand(a[2], a[0])
        }
        if (a.length>3 && a[3]!=1) {
          res.superlative.to[a[0]] = expand(a[3], a[0])
        }
        if (a.length>4 && a[4]!=1) {
          res.noun.to[a[0]] = expand(a[4], a[0])
        }
      }
    });
    res.convertables = res.convertables.reduce(_.toObj, {});
    res.adverb.no = res.adverb.no.reduce(_.toObj, {});
    return res;
  })();