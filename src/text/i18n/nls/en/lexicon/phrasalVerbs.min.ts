import opposite = require('./negate');
import verbs = require('../verbs/index');
import conjugated = require('../verbs/conjugate');
declare var zip:any;
zip = { verbs: 'fire,barge,bash,book,box,butt,cash,fence,opt,rain,wean,wheel,carve,hand,jack,log,peel,sign,type,warm,power,snap,square,wind,back,bottle,buckle,bundle,clean,flag,man,pin,pipe,plump,scrape,slow,fool,gad,root,boss,horse,joke,mess,frighten,tick,zip,bog,calm,hunker,jot,narrow,pat,tone,trickle,fend,gun,hanker,cave,chip,hone,key,pencil,rein,shade,tuck,usher,zero,auction,blast,buzz,cool,goof,level,mouth,nod,pair,reel,rip,round,slice,split,stave,storm,tee,tip,top,bank,bargain,egg,frown,latch,prattle,spur,tack,yammer,bail,black,blank,blurt,branch,cancel,edge,farm,fish,fizzle,flake,flame,flare,flesh,flip,geek,iron,lash,luck,max,nerd,pan,pig,psych,rat,scout,single,sort,spell,stamp,straighten,suss,time,tire,trip,trot,weird,whip,wimp,zone,zonk,bubble,keel,mull,pore,tide,beef,board,bone,boot,cheer,eye,brighten,fatten,fess,firm,free,freshen,fry,fuel,gang,gear,hack,ham,hole,hush,jazz,juice,lap,lighten,loosen,mash,measure,mix,mock,mop,muddle,open,own,patch,prop,rough,rustle,shack,size,sober,spark,spruce,stack,stir,stitch,string,suit,sum,team,tidy,tighten,toss,vacuum,wire,wise,word,abide,ache,angle,bag,ball,bawl,beaver,bed,belt,big,bitch,blare,blaze,bliss,bolster,border,botch,bottom,bowl,brace,breeze,brick,buck,bucket,budge,buff,bug,bulk,bump,bunk,buoy,bust,butter,cap,carried,cart,chalk,chance,chase,chat,chicken,chill,chime,choke,chop,chow,chuck,churn,clag,clam,clamp,clear,click,climb,clog,cloud,clown,coast,cobble,color,conjure,conk,contract,coop,cop,cotton,could,cozy,crank,crash,cream,creep,crop,cruise,crumb,damp,dash,dawn,dine,dish,divide,divvy,dob,dole,doss,double,doze,dredge,drill,drone,drown,drum,dry,duck,duff,dumb,dwell,ease,ebb,eke,embark,empty,faff,fart,fasten,fathom,fawn,ferret,fiddle,filter,fink,fit,flick,flog,floor,flounce,fluff,fob,forge,freak,front,gag,ghost,gin,ginger,gnaw,grass,grey,gussy,hammer,harp,hinge,hive,home,hook,hoon,hose,hound,hover,jabber,jaw,jerk,kip,knuckle,land,large,lark,leak,lean,leap,limber,lord,lust,magic,marry,mete,mill,monkey,mooch,mope,mount,mug,muscle,naff,nag,nail,nip,nose,nut,pad,pal,palm,paper,pare,part,peck,peg,pep,perk,peter,phase,pine,pit,pitch,plant,plate,plead,plough,plow,pluck,poke,polish,pony,poop,pootle,potter,prey,price,pucker,quarrel,queer,quieten,race,rack,rake,ramble,ramp,rap,ratchet,rattle,romp,room,rope,row,saddle,sag,sally,salt,saw,screen,sex,shape,shell,ship,shop,short,shrug,shy,sidle,sift,simmer,skin,skive,slack,slacken,slag,slant,slob,slope,slough,slug,smack,snaffle,snarl,sniff,snitch,snuff,soften,soldier,sound,spaff,spew,spirit,sponge,squeeze,staff,stash,steer,stiffen,stomp,stow,stub,stuff,stump,summon,swan,sweep,syphon,tag,tail,tap,text,toddle,tool,tootle,tow,toy,track,trump,try,vamp,veg,venture,wade,waltz,waste,water,weed,well,while,whisk,white,wig,wiggle,winkle,wrap,wriggle,yack,zoom',
  symmetric: '{"away":[5,9,10,11,12,18,21,32,41,59,79,81,84,105,111,294,299,424,461,491,653,708,721,725,939,1174],"on":[5,8,10,11,12,21,38,49,61,64,75,81,84,103,110,124,133,161,169,220,242,256,260,285,294,299,376,378,409,420,424,457,461,505,599,723,725,728,729,1002,1158,1164],"over":[5,18,75,79,250,308],"up":[8,9,10,11,12,20,21,25,27,32,33,41,57,58,61,67,81,82,84,85,88,93,97,102,107,111,114,133,134,155,157,165,184,220,232,246,256,294,299,306,308,355,381,134,406,411,437,592,599,619,645,720,721,728,730,731,732,733,734,735,736,737,738,739,740,741,742,743,768,943,949,1009,1102],"in":[9,10,11,12,18,19,20,25,33,48,57,58,67,77,81,85,97,107,85,155,161,184,220,232,246,276,299,306,324,325,334,381,411,415,438,491,505,550,553,645,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,784,926,951,967,976,995,1014,1016,164,1067,1085,1088,1102,1203],"together":[11,18,246],"into":[79,308,716,723,725,732,840,925],"for":[84,716,762],"on with":[725]}',
  asymmetric: '{"off":[0,15,25,48,73,77,97,102,128,154,207,216,323,324,379,451,491,550,708,715,717,718,722,724,730,732,735,736,751,752,754,762,775,776,777,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,817,825,838,865,889,900,931,933,934,938,940,943,948,956,969,975,980,981,991,997,1018,1020,1022,1025,1037,1046,1068,1071,1076,1096,1107,1108,1109,1114,1117,1120,1123,1124,1128,1131,1137,1138,1139,1140,1143,1144,1154,1157,1170,1172,1174,1177,1179,1203],"it":[2,5,753,969,1019,1081],"over":[3,21,27,48,61,104,126,409,558,721,750,752,792,837,844,845,846,847,848,923,960,976,990,1011,1017,1077,1109,1181],"about":[5,9,710,744,745,746,747,750,828,900,961,989,1007,1008,1013,1051,1063,1064,1072,1075,1095,1100,1142,1170],"after":[5,10,308,764,1057],"ahead":[5,21,268,1023],"by":[5,21,98,100,216,491,742,752,753,905],"round":[5,21,719,828,1200],"through":[5,79,742,782,817,827,840,879,925,957,978,1017,1092,1093,1115,1134,1171,1188,1189],"along":[9,184,742,752,879,894,925,962,1099,1173],"around":[9,18,21,68,241,278,294,719,722,744,745,746,747,748,749,750,753,777,779,828,865,900,961,989,1007,1008,1013,1040,1043,1046,1051,1061,1062,1063,1064,1072,1075,1095,1100,1129,1142,1149,1170,1200],"forth":[9,18,1121,1187],"apart":[10,48],"out":[13,13,15,17,21,31,32,37,41,47,59,61,70,75,79,80,88,115,116,117,169,173,179,182,201,225,232,241,251,378,392,404,413,421,437,446,461,115,600,659,693,732,733,735,736,746,774,780,790,793,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,850,894,908,910,912,913,916,918,922,923,931,932,941,945,946,948,952,956,966,969,973,974,983,984,986,988,996,997,1004,1006,1010,1012,1015,1020,1021,1024,1025,1032,1034,1042,1052,1060,1071,1072,1073,1074,1081,1084,1087,1089,1091,1098,1104,1108,1112,1121,1124,1127,1128,1130,1149,1151,1154,1156,1166,1175,1176,161,1186,1192,1196,1197,1198,1199],"up":[15,36,37,38,50,56,60,69,75,104,106,110,117,124,182,183,188,195,207,225,251,285,296,329,366,383,410,427,451,506,623,708,710,711,712,714,722,725,726,727,729,746,750,753,772,779,783,787,788,791,793,803,809,814,815,826,828,833,837,840,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,700,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,909,913,914,915,919,921,924,926,927,929,930,932,933,935,936,937,941,944,948,951,953,954,956,959,964,965,968,972,973,977,984,985,986,990,992,996,997,999,1002,1016,1021,1025,1028,1029,1031,1033,1039,1055,1065,1066,1075,1082,1083,1090,1092,1093,1094,1096,1097,1103,1105,1108,1109,1111,1113,1119,1123,1125,1126,1136,1147,1148,1152,1156,1159,1160,1163,1167,1168,1169,1175,1178,1183,1185,1193,1200],"to":[17,299,768,864],"forward":[18,308],"back":[48,51,60,61,73,93,104,161,308,900,990,1078,1092,1093,1118,161],"down":[48,68,79,378,450,626,754,755,756,757,758,759,760,761,778,795,820,900,912,928,950,958,979,980,981,989,993,1000,1041,1047,1048,1070,1074,1078,1081,1106,1135,1158,1182,1191],"on":[60,227,268,548,667,721,731,739,768,794,795,796,797,798,799,800,801,802,827,853,920,970,982,994,1001,1005,1009,1011,1015,1031,1035,1036,1053,1054,1092,1093,1101,1110,1150,1153,1173,161,1202],"in":[111,195,216,374,409,427,623,676,742,754,765,766,767,768,769,770,771,772,773,774,789,842,925,947,987,1049,1109,1115,1116,1117,1170,1188],"for":[161,209,725,741,746,763,764,795,811,900,906,907,1025,1026,1088,1175,161],"it on":[161,161],"out for":[161,161],"away":[209,242,437,724,730,732,733,751,752,772,911,917,951,956,1003,1013,1027,1044,1045,1058,1081,1086,1122,1155,1157,1161,1165,1180,1190,1194,1195],"into":[709,711,742,754,772,820,821,865,933,976,993,996,1016,1034,1039,1067,1088,1092,1093,1117,1175,1188],"in on":[714,767,768,774,842,1038,1067,1203],"down on":[717,950,955,1047],"away from":[724,1132],"off from":[724],"off on":[725,791,1022],"with":[725,730,744,750,1049,1079,1104,1119,1173,1181],"out of":[729,803,967,998,1198,1201],"to it":[729],"off against":[730],"up to":[730,857,941,972,1039,1133],"under":[734,1048],"yourself down":[741],"together":[742,882,894,963],"about with":[750],"around with":[750],"away at":[766,911,1030,1034],"off with":[783,1022,1175],"on to":[798],"onto":[798,801,1009,1025,1173],"out on":[803,820,976,983,1098],"out against":[820],"out at":[820,1054],"of":[836,1146],"off to":[838],"up on":[851,863,930,976,1066],"up against":[863,891],"towards":[864],"upon":[942,1001,1005,1036,1054,1101],"do with":[971],"as":[990],"up as":[990],"down through":[993],"in with":[1016],"out with":[1016],"off onto":[1022],"at":[1030,1054,1069,1080,1094,1149,1181],"up in":[1049],"it up":[1050,1051],"up for":[1055],"it over":[1056],"against":[1087],"it in":[1109],"toward":[1141],"it out":[1145],"clear of":[1162]}' }

export = (function () {
      var res = {particleRegex:''};
      var allVerbs = conjugated.irregulars.map(function(o){
        return o.infinitive;
      }).concat( verbs, zip.verbs.split(',') );

      var regexArr = [];
      function buildPhrasals(t) {
        var o = JSON.parse(zip[t]);
        for (var k in o) {
          o[k].reduce(function (h, i) {
            h[allVerbs[i]+' '+ k] = 'VBP';
            if (regexArr.indexOf(k) < 0) {
              regexArr.push(k);
            }
            if (t === 'symmetric' && opposite.hasOwnProperty(k)) {
              h[allVerbs[i]+' '+ opposite[k]] = 'VBP';
              if (regexArr.indexOf(opposite[k]) < 0) {
                regexArr.push(opposite[k]);
              }
            }
            return h;
          }, res);
        }
      }
      ['symmetric', 'asymmetric'].forEach(buildPhrasals);

      res.particleRegex = ['^(.*?)(', regexArr.join('|'), ')$'].join('');
      return res;
    })();